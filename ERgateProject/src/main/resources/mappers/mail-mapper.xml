<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mailMapper">

	<resultMap id="emailResultSet" type="Email">
		<id column="mail_no" property="mailNo"/>
		<result column="mail_import_flag" property="mailImportFlag"/>
		<result column="mail_from" property="mailFrom"/>
		<result column="mailname_from" property="mailnameFrom"/>
		<result column="mail_to" property="mailTo"/>
		<result column="mailname_to" property="mailnameTo"/>
		<result column="mail_title" property="mailTitle"/>
		<result column="mail_with" property="mailWith"/>
		<result column="mailname_with" property="mailnameWith"/>
		<result column="mail_content" property="mailContent"/>
		<result column="mail_attachment" property="mailAttachment"/>
		<result column="mail_date" property="mailDate"/>
		<result column="mail_read_flag" property="mailReadFlag"/>
		<result column="mail_status" property="mailStatus"/>
		
	</resultMap>
	
	<resultMap id="attachResultSet" type="MailAttachment">
		<id column="file_no" property="fileNo"/>
		<result column="mail_no" property="mailNo"/>
		<result column="origin_name" property="originName"/>
		<result column="change_name" property="changeName"/>
		<result column="file_path" property="filePath"/>
		<result column="upload_date" property="uploadDate"/>
		<result column="status" property="status"/>
		<result column="file_size" property="mailFileSize"/>
	</resultMap>
	
	<!-- 받은 메일 -->
	<select id="selectListCount" parameterType="String" resultType="_int">
		select count(*)
		  from email
		 where mail_status='Y' and mail_to = #{mailTo} 
	</select>
	<select id="selectList" parameterType="String" resultMap="emailResultSet">
		select * 
		  from email
		 where mail_status='Y' and mail_to = #{mailTo}
		 order by mail_no desc
	</select>
	
	
	
	<!-- 보낸 메일 -->
	<select id="fselectListCount" parameterType="String" resultType="_int">
		select count(*)
		  from email
		 where mail_status='Y' and mail_from = #{mailFrom}
	</select>
	<select id="fselectList" parameterType="String" resultMap="emailResultSet">
		select * 
		  from email
		 where mail_status='Y' and mail_from = #{mailFrom}
		 order by mail_no desc
	</select>

	<!-- 중요 메일 -->
	<select id="iselectListCount" parameterType="String" resultType="_int">
		select count(*)
		from (select * 
			  from email
			  where mail_from = #{mailOwn} or mail_to = #{mailOwn})
		where mail_status='Y' and mail_import_flag='Y'
	</select>
	<select id="iselectList" parameterType="String" resultMap="emailResultSet">
		select *
		from (select * 
			  from email
			  where mail_from = #{mailOwn} or mail_to = #{mailOwn})
		where mail_status='Y' and mail_import_flag='Y'
		order by mail_date desc
	</select>
	
	
	
	<select id="searchListCount" parameterType="com.kh.ergate.mail.model.vo.SearchCondition" resultType="_int">
		select count(*)
		  from email
		 where mail_status='Y'
		    <if test="mailTo != null">
		    	and mail_To = #{mailTo}
		    </if>
		    <if test="mailFrom != null">
		    	and mail_from = #{mailFrom}
		    </if>
		    <if test="mailnameFrom != null">
				AND mailname_from LIKE '%' || #{mailnameFrom} || '%'  
			</if>
			<if test="mailnameTo != null">
				AND mailname_to LIKE '%' || #{mailnameTo} || '%'
			</if>
			<if test="mailTitle != null">
				AND mail_TITLE LIKE '%' || #{mailTitle} || '%'
			</if>
			<if test="mailContent != null">
				AND mail_CONTENT LIKE '%' || #{mailContent} || '%'
			</if>
			
	</select>
	
	<select id="searchList" parameterType="com.kh.ergate.mail.model.vo.SearchCondition" resultMap="emailResultSet">
		select * 
		  from email
		 where mail_status='Y'
		 	<if test="mailTo != null">
		    	and mail_To = #{mailTo}
		    </if>
		    <if test="mailFrom != null">
		    	and mail_from = #{mailFrom}
		    </if>
		 	<if test="mailnameFrom != null">
				AND mailname_From LIKE '%' || #{mailnameFrom} || '%'  
			</if>
			<if test="mailnameTo != null">
				AND mailname_to LIKE '%' || #{mailnameTo} || '%'
			</if>
			<if test="mailTitle != null">
				AND mail_TITLE LIKE '%' || #{mailTitle} || '%'
			</if>
			<if test="mailContent != null">
				AND mail_CONTENT LIKE '%' || #{mailContent} || '%'
			</if>
		 order by mail_no desc
	</select>
	
	<select id="isearchListCount" parameterType="com.kh.ergate.mail.model.vo.SearchCondition" resultType="_int">
		select count(*)
		from (select * 
			  from email
			  where mail_from = #{mailOwn} mail_to = #{mailOwn})
		where mail_status='Y' and mail_import_flag='Y'
		    <if test="mailnameFrom != null">
				and mailname_from LIKE '%' || #{mailnameFrom} || '%'  
			</if>
			<if test="mailnameTo != null">
				and mailname_to LIKE '%' || #{mailnameTo} || '%'
			</if>
			<if test="mailTitle != null">
				and mail_TITLE LIKE '%' || #{mailTitle} || '%'
			</if>
			<if test="mailContent != null">
				and mail_CONTENT LIKE '%' || #{mailContent} || '%'
			</if>
			
	</select>
	
	<select id="isearchList" parameterType="com.kh.ergate.mail.model.vo.SearchCondition" resultMap="emailResultSet">
		select *
		from (select * 
			  from email
			  where mail_from = #{mailOwn} mail_to = #{mailOwn})
		where mail_status='Y' and mail_import_flag='Y'
		 	<if test="mailnameFrom != null">
				and mailname_From LIKE '%' || #{mailnameFrom} || '%'  
			</if>
			<if test="mailnameTo != null">
				and mailname_to LIKE '%' || #{mailnameTo} || '%'
			</if>
			<if test="mailTitle != null">
				and mail_TITLE LIKE '%' || #{mailTitle} || '%'
			</if>
			<if test="mailContent != null">
				and mail_CONTENT LIKE '%' || #{mailContent} || '%'
			</if>
		 order by mail_no desc
	</select>
	
	
	<update id="readFlagUpdate" parameterType="_int">
		update email set
		mail_read_flag = 'Y'
		where mail_no = #{mailNo}
	</update>
	
	<select id="selectMail" parameterType="_int" resultMap="emailResultSet">
		select * from email
		where mail_no = #{mailNo}
	</select>
	
	<select id="fileList" parameterType="_int" resultMap="attachResultSet">
		select * 
		  from mail_attachment
		 where mail_no=#{mailNo}
		 order by file_no desc
	</select>


	<!-- 메일작성 -->
	<insert id="insertMail" parameterType="Email">
		insert into email
		values(seq_mail_no.nextval, 'N', #{mailFrom}, #{mailTo}, #{mailTitle}, 
		#{mailContent}, 'Y', sysdate, 'N', 'Y', #{mailnameFrom}, #{mailnameTo}, #{mailWith}, #{mailnameWith})
	</insert>
	
	<insert id="insertMailAttachment" parameterType="MailAttachment">
		insert into mail_Attachment 
		values(seq_atmail_no.nextval, 
		<choose> 
			<when test='mailNo != ""'> 
			#{mailNo}
			</when> 
			<otherwise> 
			seq_mail_no.currval
			</otherwise> 
		</choose>
		, #{originName}, #{changeName}, #{filePath}, sysdate, 'Y', #{mailFileSize}) 
		
	</insert>
	
	<update id="updateMailFlag" parameterType="_int">
		update email set
		mail_attachment = 'N'
		where mail_no = #{currNo}
	</update>
	
	<select id="nowMailNo" resultMap="emailResultSet">
		select mail_no from (select * from email
		order by mail_no desc) e
		where rownum = 1
	</select>

	<select id="loadMailnameTo" parameterType="String" resultType="String">
		select emp_name from employee
		where emp_id = #{toname}
	</select>

	<update id="deleteMail" parameterType="_int">
		update email set
		mail_status = 'N'
		where mail_no = #{mailNo}
	</update>

	<update id="importFlagUpdate" parameterType="_int">
		update email set
		mail_import_flag = 'Y'
		where mail_no = #{mailNo}
	</update>
		<update id="unImportFlagUpdate" parameterType="_int">
		update email set
		mail_import_flag = 'N'
		where mail_no = #{mailNo}
	</update>
</mapper>
